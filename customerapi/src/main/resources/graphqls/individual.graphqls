schema {
    query: Query
    mutation: Mutation
}
interface Customer{
    accountNo:ID!
    name:FullName
    email:String
    password:String
    contactNo:Int
}
type FullName{
    firstName:String
    middleName:String
    lastName:String
}
type Individual implements  Customer{
    accountNo:ID!
    name:FullName
    email:String
    password:String
    contactNo:Int
    gender:Gender
    dob: Date
}
scalar Date
enum Gender{
    Male,Female,Transgender
}
directive @Size(min : Int = 0, max : Int = 2147483647, message : String = "graphql.validation.Size.message")
on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

input IndividualInput{
    accountNo:ID!
    name:FullNameInput
    email:String
    password:String @Size(min:5,max:8)
    contactNo:Int
    gender:Gender
    dob: Date
}
input FullNameInput{
    firstName:String
    middleName:String
    lastName:String
}
type Query{
    findAllIndividual:[Individual]
    findIndividualById(accountNo:Int):Individual
    findIndividualByEmail(email:String):[Individual]
}
type Mutation{
    addIndividual(individualInput:IndividualInput):Individual
    updateIndividual(accountNo:Int,contactNo:Int):Individual
    deleteIndividual(accountNo:Int):Boolean

}